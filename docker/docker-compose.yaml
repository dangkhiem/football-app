version: '3'
networks:
  app-network: null
services:
  nginx:
    container_name: 'nginx_${APP_NAME}'
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - '${BACKEND_EXPOSE}:80'
    volumes:
      - ../src:/var/www/project
      - ./nginx/log:/var/log/nginx
    tty: true
    networks:
      - app-network
  redis:
    container_name: 'redis_${APP_NAME}'
    build:
      context: ./redis
      dockerfile: Dockerfile
    ports:
      - '${REDIS_EXPOSE}:6379'
    networks:
      - app-network
  mysql:
    container_name: 'mysql_${APP_NAME}'
    build:
      context: ./mysql
      dockerfile: Dockerfile
    tty: true
    ports:
      - '${MYSQL_EXPOST}:3306'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/dbdata:/var/lib/mysql
    networks:
      - app-network
  phpmyadmin:
    container_name: 'phpmyadmin_${APP_NAME}'
    image: phpmyadmin
    restart: always
    ports:
      - '${PHPMYADMIN_EXPOSE}:80'
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    networks:
      - app-network
  node:
    container_name: 'node_${APP_NAME}'
    build:
      context: ./node
      dockerfile: Dockerfile
    volumes:
      - '../fe:/usr/src/app'
      - '/app/node_modules'
    ports:
      - '${FRONTEND_EXPOSE}:3000'
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    networks:
      - app-network

volumes:
  dbdata: